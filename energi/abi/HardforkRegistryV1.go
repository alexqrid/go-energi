// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package abi

import (
	"math/big"
	"strings"

	ethereum "energi.world/core/gen3"
	"energi.world/core/gen3/accounts/abi"
	"energi.world/core/gen3/accounts/abi/bind"
	"energi.world/core/gen3/common"
	"energi.world/core/gen3/core/types"
	"energi.world/core/gen3/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// HardforkRegistryV1ABI is the input ABI used to generate the binding from.
const HardforkRegistryV1ABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_hf_signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_finalization_confirmations\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"block_number\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sw_features\",\"type\":\"uint256\"}],\"name\":\"HardforkCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"block_number\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"block_hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sw_features\",\"type\":\"uint256\"}],\"name\":\"HardforkFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"HardforkRemoved\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"block_number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sw_features\",\"type\":\"uint256\"}],\"name\":\"add\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contractIGovernedContract\",\"name\":\"_newImpl\",\"type\":\"address\"}],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"enumerate\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"enumerateActive\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"enumeratePending\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"finalize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"get\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"block_number\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"block_hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"sw_features\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hf_signer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contractIGovernedContract\",\"name\":\"_oldImpl\",\"type\":\"address\"}],\"name\":\"migrate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"remove\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"v1storage\",\"outputs\":[{\"internalType\":\"contractStorageHardforkRegistryV1\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// HardforkRegistryV1Bin is the compiled bytecode used for deploying new contracts.
const HardforkRegistryV1Bin = ``

// DeployHardforkRegistryV1 deploys a new Ethereum contract, binding an instance of HardforkRegistryV1 to it.
func DeployHardforkRegistryV1(auth *bind.TransactOpts, backend bind.ContractBackend, _proxy common.Address, _hf_signer common.Address, _finalization_confirmations *big.Int) (common.Address, *types.Transaction, *HardforkRegistryV1, error) {
	parsed, err := abi.JSON(strings.NewReader(HardforkRegistryV1ABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(HardforkRegistryV1Bin), backend, _proxy, _hf_signer, _finalization_confirmations)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &HardforkRegistryV1{HardforkRegistryV1Caller: HardforkRegistryV1Caller{contract: contract}, HardforkRegistryV1Transactor: HardforkRegistryV1Transactor{contract: contract}, HardforkRegistryV1Filterer: HardforkRegistryV1Filterer{contract: contract}}, nil
}

// HardforkRegistryV1Bin is the compiled bytecode of contract after deployment.
const HardforkRegistryV1RuntimeBin = `0x6080604052600436106100c15760003560e01c8063a216cbe51161007f578063ce5494bb11610059578063ce5494bb146102ee578063e1d6f43a14610321578063ec55688914610336578063ff9f78b31461034b576100c1565b8063a216cbe51461023e578063aa61604f14610253578063ca89ad5f14610289576100c1565b8062f55d9d146100fe5780632d059305146101335780635c36901c146101645780638eaa6ac0146101a257806392584d80146101ea57806395bc267314610214575b6040805162461bcd60e51b815260206004820152600d60248201526c139bdd081cdd5c1c1bdc9d1959609a1b604482015290519081900360640190fd5b34801561010a57600080fd5b506101316004803603602081101561012157600080fd5b50356001600160a01b0316610360565b005b34801561013f57600080fd5b506101486103c0565b604080516001600160a01b039092168252519081900360200190f35b34801561017057600080fd5b5061018e6004803603602081101561018757600080fd5b50356103cf565b604080519115158252519081900360200190f35b3480156101ae57600080fd5b506101cc600480360360208110156101c557600080fd5b5035610473565b60408051938452602084019290925282820152519081900360600190f35b3480156101f657600080fd5b506101316004803603602081101561020d57600080fd5b503561050d565b34801561022057600080fd5b5061018e6004803603602081101561023757600080fd5b50356106ac565b34801561024a57600080fd5b506101486107c2565b34801561025f57600080fd5b506101316004803603606081101561027657600080fd5b50803590602081013590604001356107d1565b34801561029557600080fd5b5061029e6108f7565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156102da5781810151838201526020016102c2565b505050509050019250505060405180910390f35b3480156102fa57600080fd5b506101316004803603602081101561031157600080fd5b50356001600160a01b0316610beb565b34801561032d57600080fd5b5061029e610c3e565b34801561034257600080fd5b50610148610f24565b34801561035757600080fd5b5061029e610f33565b6000546001600160a01b031633146103ab576040805162461bcd60e51b81526020600482015260096024820152684e6f742070726f787960b81b604482015290519081900360640190fd5b6103b481611046565b806001600160a01b0316ff5b6003546001600160a01b031681565b60035460408051631e914cfd60e01b8152600481018490529051600092839283926001600160a01b0390921691631e914cfd91602480820192608092909190829003018186803b15801561042257600080fd5b505afa158015610436573d6000803e3d6000fd5b505050506040513d608081101561044c57600080fd5b508051602090910151909250905043811180159061046957508115155b925050505b919050565b60035460408051631e914cfd60e01b8152600481018490529051600092839283926001600160a01b0390921691631e914cfd91602480820192608092909190829003018186803b1580156104c657600080fd5b505afa1580156104da573d6000803e3d6000fd5b505050506040513d60808110156104f057600080fd5b506020810151604082015160609092015190969195509350915050565b6002546001600160a01b03166105216110af565b6001600160a01b0316146105665760405162461bcd60e51b815260040180806020018281038252602f8152602001806110d2602f913960400191505060405180910390fd5b600354600480546040805163e9812d7160e01b81529283018590526024830191909152516001600160a01b039092169163e9812d719160448082019260009290919082900301818387803b1580156105bd57600080fd5b505af11580156105d1573d6000803e3d6000fd5b505060035460408051631e914cfd60e01b81526004810186905290516000945084935083926001600160a01b031691631e914cfd916024808301926080929190829003018186803b15801561062557600080fd5b505afa158015610639573d6000803e3d6000fd5b505050506040513d608081101561064f57600080fd5b50602080820151604080840151606094850151825184815294850182905284830181905291519297509550935086927f6dc459fd769bc8043e2a9bf76cf8ca708f41158bb7d40566a9f488a8fc6c87da928290030190a250505050565b6002546000906001600160a01b03166106c36110af565b6001600160a01b0316146107085760405162461bcd60e51b815260040180806020018281038252602f8152602001806110d2602f913960400191505060405180910390fd5b600354604080516395bc267360e01b81526004810185905290516001600160a01b03909216916395bc2673916024808201926020929091908290030181600087803b15801561075657600080fd5b505af115801561076a573d6000803e3d6000fd5b505050506040513d602081101561078057600080fd5b5051156107ba5760405182907f7633164a5aa7e8b452d1c35fadd7abd1d59eb45b5fd97f68087b4a3ee2b280ed90600090a250600161046e565b506000919050565b6002546001600160a01b031681565b6002546001600160a01b03166107e56110af565b6001600160a01b03161461082a5760405162461bcd60e51b815260040180806020018281038252602f8152602001806110d2602f913960400191505060405180910390fd5b6003546040805163359c351d60e01b815260048101869052602481018590526044810184905290516001600160a01b039092169163359c351d916064808201926020929091908290030181600087803b15801561088657600080fd5b505af115801561089a573d6000803e3d6000fd5b505050506040513d60208110156108b057600080fd5b5051156108f2576040805183815260208101839052815185927f33bbb09eb0e71b49dacc2c0e0f73dd640a1314f0d08d5f8efa5c12eac770c4c3928290030190a25b505050565b606080600360009054906101000a90046001600160a01b03166001600160a01b0316632402c9826040518163ffffffff1660e01b815260040160006040518083038186803b15801561094857600080fd5b505afa15801561095c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561098557600080fd5b81019080805160405193929190846401000000008211156109a557600080fd5b9083019060208201858111156109ba57600080fd5b82518660208202830111640100000000821117156109d757600080fd5b82525081516020918201928201910280838360005b83811015610a045781810151838201526020016109ec565b505050509190910160405250508251929350600091508190505b82811015610acf5760035484516000916001600160a01b031690631e914cfd90879085908110610a4a57fe5b60200260200101516040518263ffffffff1660e01b81526004018082815260200191505060806040518083038186803b158015610a8657600080fd5b505afa158015610a9a573d6000803e3d6000fd5b505050506040513d6080811015610ab057600080fd5b5060200151905043811115610ac6576001909201915b50600101610a1e565b50606081604051908082528060200260200182016040528015610afc578160200160208202803883390190505b5090506000805b84811015610bdf5760035486516000916001600160a01b031690631e914cfd90899085908110610b2f57fe5b60200260200101516040518263ffffffff1660e01b81526004018082815260200191505060806040518083038186803b158015610b6b57600080fd5b505afa158015610b7f573d6000803e3d6000fd5b505050506040513d6080811015610b9557600080fd5b5060200151905043811115610bd657868281518110610bb057fe5b6020026020010151848481518110610bc457fe5b60209081029190910101526001909201915b50600101610b03565b50909450505050505b90565b6000546001600160a01b03163314610c36576040805162461bcd60e51b81526020600482015260096024820152684e6f742070726f787960b81b604482015290519081900360640190fd5b610c3b815b50565b606080600360009054906101000a90046001600160a01b03166001600160a01b0316632402c9826040518163ffffffff1660e01b815260040160006040518083038186803b158015610c8f57600080fd5b505afa158015610ca3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610ccc57600080fd5b8101908080516040519392919084640100000000821115610cec57600080fd5b908301906020820185811115610d0157600080fd5b8251866020820283011164010000000082111715610d1e57600080fd5b82525081516020918201928201910280838360005b83811015610d4b578181015183820152602001610d33565b505050509190910160405250508251929350600091508190505b82811015610e155760035484516000916001600160a01b031690631e914cfd90879085908110610d9157fe5b60200260200101516040518263ffffffff1660e01b81526004018082815260200191505060806040518083038186803b158015610dcd57600080fd5b505afa158015610de1573d6000803e3d6000fd5b505050506040513d6080811015610df757600080fd5b50602001519050438111610e0c576001909201915b50600101610d65565b50606081604051908082528060200260200182016040528015610e42578160200160208202803883390190505b5090506000805b84811015610bdf5760035486516000916001600160a01b031690631e914cfd90899085908110610e7557fe5b60200260200101516040518263ffffffff1660e01b81526004018082815260200191505060806040518083038186803b158015610eb157600080fd5b505afa158015610ec5573d6000803e3d6000fd5b505050506040513d6080811015610edb57600080fd5b50602001519050438111610f1b57868281518110610ef557fe5b6020026020010151848481518110610f0957fe5b60209081029190910101526001909201915b50600101610e49565b6000546001600160a01b031681565b6003546040805163120164c160e11b815290516060926001600160a01b031691632402c982916004808301926000929190829003018186803b158015610f7857600080fd5b505afa158015610f8c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610fb557600080fd5b8101908080516040519392919084640100000000821115610fd557600080fd5b908301906020820185811115610fea57600080fd5b825186602082028301116401000000008211171561100757600080fd5b82525081516020918201928201910280838360005b8381101561103457818101518382015260200161101c565b50505050905001604052505050905090565b600354604080516313af403560e01b81526001600160a01b038481166004830152915191909216916313af403591602480830192600092919082900301818387803b15801561109457600080fd5b505af11580156110a8573d6000803e3d6000fd5b5050505050565b600080546001600160a01b03163314156110ca575032610be8565b5033610be856fe6f6e6c792068665f7369676e657220697320616c6c6f77656420746f2063616c6c20746869732066756e6374696f6ea265627a7a72315820abec9d1edf0b34b23aef71fee32a6035bc2bfa7c9135e87035ef394fc4f0708064736f6c63430005100032`

// HardforkRegistryV1 is an auto generated Go binding around an Ethereum contract.
type HardforkRegistryV1 struct {
	HardforkRegistryV1Caller     // Read-only binding to the contract
	HardforkRegistryV1Transactor // Write-only binding to the contract
	HardforkRegistryV1Filterer   // Log filterer for contract events
}

// HardforkRegistryV1Caller is an auto generated read-only Go binding around an Ethereum contract.
type HardforkRegistryV1Caller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// HardforkRegistryV1Transactor is an auto generated write-only Go binding around an Ethereum contract.
type HardforkRegistryV1Transactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// HardforkRegistryV1Filterer is an auto generated log filtering Go binding around an Ethereum contract events.
type HardforkRegistryV1Filterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// HardforkRegistryV1Session is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type HardforkRegistryV1Session struct {
	Contract     *HardforkRegistryV1 // Generic contract binding to set the session for
	CallOpts     bind.CallOpts       // Call options to use throughout this session
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// HardforkRegistryV1CallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type HardforkRegistryV1CallerSession struct {
	Contract *HardforkRegistryV1Caller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts             // Call options to use throughout this session
}

// HardforkRegistryV1TransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type HardforkRegistryV1TransactorSession struct {
	Contract     *HardforkRegistryV1Transactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts             // Transaction auth options to use throughout this session
}

// HardforkRegistryV1Raw is an auto generated low-level Go binding around an Ethereum contract.
type HardforkRegistryV1Raw struct {
	Contract *HardforkRegistryV1 // Generic contract binding to access the raw methods on
}

// HardforkRegistryV1CallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type HardforkRegistryV1CallerRaw struct {
	Contract *HardforkRegistryV1Caller // Generic read-only contract binding to access the raw methods on
}

// HardforkRegistryV1TransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type HardforkRegistryV1TransactorRaw struct {
	Contract *HardforkRegistryV1Transactor // Generic write-only contract binding to access the raw methods on
}

// NewHardforkRegistryV1 creates a new instance of HardforkRegistryV1, bound to a specific deployed contract.
func NewHardforkRegistryV1(address common.Address, backend bind.ContractBackend) (*HardforkRegistryV1, error) {
	contract, err := bindHardforkRegistryV1(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &HardforkRegistryV1{HardforkRegistryV1Caller: HardforkRegistryV1Caller{contract: contract}, HardforkRegistryV1Transactor: HardforkRegistryV1Transactor{contract: contract}, HardforkRegistryV1Filterer: HardforkRegistryV1Filterer{contract: contract}}, nil
}

// NewHardforkRegistryV1Caller creates a new read-only instance of HardforkRegistryV1, bound to a specific deployed contract.
func NewHardforkRegistryV1Caller(address common.Address, caller bind.ContractCaller) (*HardforkRegistryV1Caller, error) {
	contract, err := bindHardforkRegistryV1(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &HardforkRegistryV1Caller{contract: contract}, nil
}

// NewHardforkRegistryV1Transactor creates a new write-only instance of HardforkRegistryV1, bound to a specific deployed contract.
func NewHardforkRegistryV1Transactor(address common.Address, transactor bind.ContractTransactor) (*HardforkRegistryV1Transactor, error) {
	contract, err := bindHardforkRegistryV1(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &HardforkRegistryV1Transactor{contract: contract}, nil
}

// NewHardforkRegistryV1Filterer creates a new log filterer instance of HardforkRegistryV1, bound to a specific deployed contract.
func NewHardforkRegistryV1Filterer(address common.Address, filterer bind.ContractFilterer) (*HardforkRegistryV1Filterer, error) {
	contract, err := bindHardforkRegistryV1(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &HardforkRegistryV1Filterer{contract: contract}, nil
}

// bindHardforkRegistryV1 binds a generic wrapper to an already deployed contract.
func bindHardforkRegistryV1(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(HardforkRegistryV1ABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_HardforkRegistryV1 *HardforkRegistryV1Raw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _HardforkRegistryV1.Contract.HardforkRegistryV1Caller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_HardforkRegistryV1 *HardforkRegistryV1Raw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _HardforkRegistryV1.Contract.HardforkRegistryV1Transactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_HardforkRegistryV1 *HardforkRegistryV1Raw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _HardforkRegistryV1.Contract.HardforkRegistryV1Transactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_HardforkRegistryV1 *HardforkRegistryV1CallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _HardforkRegistryV1.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_HardforkRegistryV1 *HardforkRegistryV1TransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _HardforkRegistryV1.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_HardforkRegistryV1 *HardforkRegistryV1TransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _HardforkRegistryV1.Contract.contract.Transact(opts, method, params...)
}

// Enumerate is a free data retrieval call binding the contract method 0xff9f78b3.
//
// Solidity: function enumerate() constant returns(bytes32[])
func (_HardforkRegistryV1 *HardforkRegistryV1Caller) Enumerate(opts *bind.CallOpts) ([][32]byte, error) {
	var (
		ret0 = new([][32]byte)
	)
	out := ret0
	err := _HardforkRegistryV1.contract.Call(opts, out, "enumerate")
	return *ret0, err
}

// Enumerate is a free data retrieval call binding the contract method 0xff9f78b3.
//
// Solidity: function enumerate() constant returns(bytes32[])
func (_HardforkRegistryV1 *HardforkRegistryV1Session) Enumerate() ([][32]byte, error) {
	return _HardforkRegistryV1.Contract.Enumerate(&_HardforkRegistryV1.CallOpts)
}

// Enumerate is a free data retrieval call binding the contract method 0xff9f78b3.
//
// Solidity: function enumerate() constant returns(bytes32[])
func (_HardforkRegistryV1 *HardforkRegistryV1CallerSession) Enumerate() ([][32]byte, error) {
	return _HardforkRegistryV1.Contract.Enumerate(&_HardforkRegistryV1.CallOpts)
}

// EnumerateActive is a free data retrieval call binding the contract method 0xe1d6f43a.
//
// Solidity: function enumerateActive() constant returns(bytes32[])
func (_HardforkRegistryV1 *HardforkRegistryV1Caller) EnumerateActive(opts *bind.CallOpts) ([][32]byte, error) {
	var (
		ret0 = new([][32]byte)
	)
	out := ret0
	err := _HardforkRegistryV1.contract.Call(opts, out, "enumerateActive")
	return *ret0, err
}

// EnumerateActive is a free data retrieval call binding the contract method 0xe1d6f43a.
//
// Solidity: function enumerateActive() constant returns(bytes32[])
func (_HardforkRegistryV1 *HardforkRegistryV1Session) EnumerateActive() ([][32]byte, error) {
	return _HardforkRegistryV1.Contract.EnumerateActive(&_HardforkRegistryV1.CallOpts)
}

// EnumerateActive is a free data retrieval call binding the contract method 0xe1d6f43a.
//
// Solidity: function enumerateActive() constant returns(bytes32[])
func (_HardforkRegistryV1 *HardforkRegistryV1CallerSession) EnumerateActive() ([][32]byte, error) {
	return _HardforkRegistryV1.Contract.EnumerateActive(&_HardforkRegistryV1.CallOpts)
}

// EnumeratePending is a free data retrieval call binding the contract method 0xca89ad5f.
//
// Solidity: function enumeratePending() constant returns(bytes32[])
func (_HardforkRegistryV1 *HardforkRegistryV1Caller) EnumeratePending(opts *bind.CallOpts) ([][32]byte, error) {
	var (
		ret0 = new([][32]byte)
	)
	out := ret0
	err := _HardforkRegistryV1.contract.Call(opts, out, "enumeratePending")
	return *ret0, err
}

// EnumeratePending is a free data retrieval call binding the contract method 0xca89ad5f.
//
// Solidity: function enumeratePending() constant returns(bytes32[])
func (_HardforkRegistryV1 *HardforkRegistryV1Session) EnumeratePending() ([][32]byte, error) {
	return _HardforkRegistryV1.Contract.EnumeratePending(&_HardforkRegistryV1.CallOpts)
}

// EnumeratePending is a free data retrieval call binding the contract method 0xca89ad5f.
//
// Solidity: function enumeratePending() constant returns(bytes32[])
func (_HardforkRegistryV1 *HardforkRegistryV1CallerSession) EnumeratePending() ([][32]byte, error) {
	return _HardforkRegistryV1.Contract.EnumeratePending(&_HardforkRegistryV1.CallOpts)
}

// Get is a free data retrieval call binding the contract method 0x8eaa6ac0.
//
// Solidity: function get(bytes32 name) constant returns(uint256 block_number, bytes32 block_hash, uint256 sw_features)
func (_HardforkRegistryV1 *HardforkRegistryV1Caller) Get(opts *bind.CallOpts, name [32]byte) (struct {
	BlockNumber *big.Int
	BlockHash   [32]byte
	SwFeatures  *big.Int
}, error) {
	ret := new(struct {
		BlockNumber *big.Int
		BlockHash   [32]byte
		SwFeatures  *big.Int
	})
	out := ret
	err := _HardforkRegistryV1.contract.Call(opts, out, "get", name)
	return *ret, err
}

// Get is a free data retrieval call binding the contract method 0x8eaa6ac0.
//
// Solidity: function get(bytes32 name) constant returns(uint256 block_number, bytes32 block_hash, uint256 sw_features)
func (_HardforkRegistryV1 *HardforkRegistryV1Session) Get(name [32]byte) (struct {
	BlockNumber *big.Int
	BlockHash   [32]byte
	SwFeatures  *big.Int
}, error) {
	return _HardforkRegistryV1.Contract.Get(&_HardforkRegistryV1.CallOpts, name)
}

// Get is a free data retrieval call binding the contract method 0x8eaa6ac0.
//
// Solidity: function get(bytes32 name) constant returns(uint256 block_number, bytes32 block_hash, uint256 sw_features)
func (_HardforkRegistryV1 *HardforkRegistryV1CallerSession) Get(name [32]byte) (struct {
	BlockNumber *big.Int
	BlockHash   [32]byte
	SwFeatures  *big.Int
}, error) {
	return _HardforkRegistryV1.Contract.Get(&_HardforkRegistryV1.CallOpts, name)
}

// HfSigner is a free data retrieval call binding the contract method 0xa216cbe5.
//
// Solidity: function hf_signer() constant returns(address)
func (_HardforkRegistryV1 *HardforkRegistryV1Caller) HfSigner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _HardforkRegistryV1.contract.Call(opts, out, "hf_signer")
	return *ret0, err
}

// HfSigner is a free data retrieval call binding the contract method 0xa216cbe5.
//
// Solidity: function hf_signer() constant returns(address)
func (_HardforkRegistryV1 *HardforkRegistryV1Session) HfSigner() (common.Address, error) {
	return _HardforkRegistryV1.Contract.HfSigner(&_HardforkRegistryV1.CallOpts)
}

// HfSigner is a free data retrieval call binding the contract method 0xa216cbe5.
//
// Solidity: function hf_signer() constant returns(address)
func (_HardforkRegistryV1 *HardforkRegistryV1CallerSession) HfSigner() (common.Address, error) {
	return _HardforkRegistryV1.Contract.HfSigner(&_HardforkRegistryV1.CallOpts)
}

// IsActive is a free data retrieval call binding the contract method 0x5c36901c.
//
// Solidity: function isActive(bytes32 name) constant returns(bool)
func (_HardforkRegistryV1 *HardforkRegistryV1Caller) IsActive(opts *bind.CallOpts, name [32]byte) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _HardforkRegistryV1.contract.Call(opts, out, "isActive", name)
	return *ret0, err
}

// IsActive is a free data retrieval call binding the contract method 0x5c36901c.
//
// Solidity: function isActive(bytes32 name) constant returns(bool)
func (_HardforkRegistryV1 *HardforkRegistryV1Session) IsActive(name [32]byte) (bool, error) {
	return _HardforkRegistryV1.Contract.IsActive(&_HardforkRegistryV1.CallOpts, name)
}

// IsActive is a free data retrieval call binding the contract method 0x5c36901c.
//
// Solidity: function isActive(bytes32 name) constant returns(bool)
func (_HardforkRegistryV1 *HardforkRegistryV1CallerSession) IsActive(name [32]byte) (bool, error) {
	return _HardforkRegistryV1.Contract.IsActive(&_HardforkRegistryV1.CallOpts, name)
}

// Proxy is a free data retrieval call binding the contract method 0xec556889.
//
// Solidity: function proxy() constant returns(address)
func (_HardforkRegistryV1 *HardforkRegistryV1Caller) Proxy(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _HardforkRegistryV1.contract.Call(opts, out, "proxy")
	return *ret0, err
}

// Proxy is a free data retrieval call binding the contract method 0xec556889.
//
// Solidity: function proxy() constant returns(address)
func (_HardforkRegistryV1 *HardforkRegistryV1Session) Proxy() (common.Address, error) {
	return _HardforkRegistryV1.Contract.Proxy(&_HardforkRegistryV1.CallOpts)
}

// Proxy is a free data retrieval call binding the contract method 0xec556889.
//
// Solidity: function proxy() constant returns(address)
func (_HardforkRegistryV1 *HardforkRegistryV1CallerSession) Proxy() (common.Address, error) {
	return _HardforkRegistryV1.Contract.Proxy(&_HardforkRegistryV1.CallOpts)
}

// V1storage is a free data retrieval call binding the contract method 0x2d059305.
//
// Solidity: function v1storage() constant returns(address)
func (_HardforkRegistryV1 *HardforkRegistryV1Caller) V1storage(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _HardforkRegistryV1.contract.Call(opts, out, "v1storage")
	return *ret0, err
}

// V1storage is a free data retrieval call binding the contract method 0x2d059305.
//
// Solidity: function v1storage() constant returns(address)
func (_HardforkRegistryV1 *HardforkRegistryV1Session) V1storage() (common.Address, error) {
	return _HardforkRegistryV1.Contract.V1storage(&_HardforkRegistryV1.CallOpts)
}

// V1storage is a free data retrieval call binding the contract method 0x2d059305.
//
// Solidity: function v1storage() constant returns(address)
func (_HardforkRegistryV1 *HardforkRegistryV1CallerSession) V1storage() (common.Address, error) {
	return _HardforkRegistryV1.Contract.V1storage(&_HardforkRegistryV1.CallOpts)
}

// Add is a paid mutator transaction binding the contract method 0xaa61604f.
//
// Solidity: function add(bytes32 name, uint256 block_number, uint256 sw_features) returns()
func (_HardforkRegistryV1 *HardforkRegistryV1Transactor) Add(opts *bind.TransactOpts, name [32]byte, block_number *big.Int, sw_features *big.Int) (*types.Transaction, error) {
	return _HardforkRegistryV1.contract.Transact(opts, "add", name, block_number, sw_features)
}

// Add is a paid mutator transaction binding the contract method 0xaa61604f.
//
// Solidity: function add(bytes32 name, uint256 block_number, uint256 sw_features) returns()
func (_HardforkRegistryV1 *HardforkRegistryV1Session) Add(name [32]byte, block_number *big.Int, sw_features *big.Int) (*types.Transaction, error) {
	return _HardforkRegistryV1.Contract.Add(&_HardforkRegistryV1.TransactOpts, name, block_number, sw_features)
}

// Add is a paid mutator transaction binding the contract method 0xaa61604f.
//
// Solidity: function add(bytes32 name, uint256 block_number, uint256 sw_features) returns()
func (_HardforkRegistryV1 *HardforkRegistryV1TransactorSession) Add(name [32]byte, block_number *big.Int, sw_features *big.Int) (*types.Transaction, error) {
	return _HardforkRegistryV1.Contract.Add(&_HardforkRegistryV1.TransactOpts, name, block_number, sw_features)
}

// Destroy is a paid mutator transaction binding the contract method 0x00f55d9d.
//
// Solidity: function destroy(address _newImpl) returns()
func (_HardforkRegistryV1 *HardforkRegistryV1Transactor) Destroy(opts *bind.TransactOpts, _newImpl common.Address) (*types.Transaction, error) {
	return _HardforkRegistryV1.contract.Transact(opts, "destroy", _newImpl)
}

// Destroy is a paid mutator transaction binding the contract method 0x00f55d9d.
//
// Solidity: function destroy(address _newImpl) returns()
func (_HardforkRegistryV1 *HardforkRegistryV1Session) Destroy(_newImpl common.Address) (*types.Transaction, error) {
	return _HardforkRegistryV1.Contract.Destroy(&_HardforkRegistryV1.TransactOpts, _newImpl)
}

// Destroy is a paid mutator transaction binding the contract method 0x00f55d9d.
//
// Solidity: function destroy(address _newImpl) returns()
func (_HardforkRegistryV1 *HardforkRegistryV1TransactorSession) Destroy(_newImpl common.Address) (*types.Transaction, error) {
	return _HardforkRegistryV1.Contract.Destroy(&_HardforkRegistryV1.TransactOpts, _newImpl)
}

// Finalize is a paid mutator transaction binding the contract method 0x92584d80.
//
// Solidity: function finalize(bytes32 name) returns()
func (_HardforkRegistryV1 *HardforkRegistryV1Transactor) Finalize(opts *bind.TransactOpts, name [32]byte) (*types.Transaction, error) {
	return _HardforkRegistryV1.contract.Transact(opts, "finalize", name)
}

// Finalize is a paid mutator transaction binding the contract method 0x92584d80.
//
// Solidity: function finalize(bytes32 name) returns()
func (_HardforkRegistryV1 *HardforkRegistryV1Session) Finalize(name [32]byte) (*types.Transaction, error) {
	return _HardforkRegistryV1.Contract.Finalize(&_HardforkRegistryV1.TransactOpts, name)
}

// Finalize is a paid mutator transaction binding the contract method 0x92584d80.
//
// Solidity: function finalize(bytes32 name) returns()
func (_HardforkRegistryV1 *HardforkRegistryV1TransactorSession) Finalize(name [32]byte) (*types.Transaction, error) {
	return _HardforkRegistryV1.Contract.Finalize(&_HardforkRegistryV1.TransactOpts, name)
}

// Migrate is a paid mutator transaction binding the contract method 0xce5494bb.
//
// Solidity: function migrate(address _oldImpl) returns()
func (_HardforkRegistryV1 *HardforkRegistryV1Transactor) Migrate(opts *bind.TransactOpts, _oldImpl common.Address) (*types.Transaction, error) {
	return _HardforkRegistryV1.contract.Transact(opts, "migrate", _oldImpl)
}

// Migrate is a paid mutator transaction binding the contract method 0xce5494bb.
//
// Solidity: function migrate(address _oldImpl) returns()
func (_HardforkRegistryV1 *HardforkRegistryV1Session) Migrate(_oldImpl common.Address) (*types.Transaction, error) {
	return _HardforkRegistryV1.Contract.Migrate(&_HardforkRegistryV1.TransactOpts, _oldImpl)
}

// Migrate is a paid mutator transaction binding the contract method 0xce5494bb.
//
// Solidity: function migrate(address _oldImpl) returns()
func (_HardforkRegistryV1 *HardforkRegistryV1TransactorSession) Migrate(_oldImpl common.Address) (*types.Transaction, error) {
	return _HardforkRegistryV1.Contract.Migrate(&_HardforkRegistryV1.TransactOpts, _oldImpl)
}

// Remove is a paid mutator transaction binding the contract method 0x95bc2673.
//
// Solidity: function remove(bytes32 name) returns(bool)
func (_HardforkRegistryV1 *HardforkRegistryV1Transactor) Remove(opts *bind.TransactOpts, name [32]byte) (*types.Transaction, error) {
	return _HardforkRegistryV1.contract.Transact(opts, "remove", name)
}

// Remove is a paid mutator transaction binding the contract method 0x95bc2673.
//
// Solidity: function remove(bytes32 name) returns(bool)
func (_HardforkRegistryV1 *HardforkRegistryV1Session) Remove(name [32]byte) (*types.Transaction, error) {
	return _HardforkRegistryV1.Contract.Remove(&_HardforkRegistryV1.TransactOpts, name)
}

// Remove is a paid mutator transaction binding the contract method 0x95bc2673.
//
// Solidity: function remove(bytes32 name) returns(bool)
func (_HardforkRegistryV1 *HardforkRegistryV1TransactorSession) Remove(name [32]byte) (*types.Transaction, error) {
	return _HardforkRegistryV1.Contract.Remove(&_HardforkRegistryV1.TransactOpts, name)
}

// HardforkRegistryV1HardforkCreatedIterator is returned from FilterHardforkCreated and is used to iterate over the raw logs and unpacked data for HardforkCreated events raised by the HardforkRegistryV1 contract.
type HardforkRegistryV1HardforkCreatedIterator struct {
	Event *HardforkRegistryV1HardforkCreated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *HardforkRegistryV1HardforkCreatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(HardforkRegistryV1HardforkCreated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(HardforkRegistryV1HardforkCreated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *HardforkRegistryV1HardforkCreatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *HardforkRegistryV1HardforkCreatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// HardforkRegistryV1HardforkCreated represents a HardforkCreated event raised by the HardforkRegistryV1 contract.
type HardforkRegistryV1HardforkCreated struct {
	Name        [32]byte
	BlockNumber *big.Int
	SwFeatures  *big.Int
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterHardforkCreated is a free log retrieval operation binding the contract event 0x33bbb09eb0e71b49dacc2c0e0f73dd640a1314f0d08d5f8efa5c12eac770c4c3.
//
// Solidity: event HardforkCreated(bytes32 indexed name, uint256 block_number, uint256 sw_features)
func (_HardforkRegistryV1 *HardforkRegistryV1Filterer) FilterHardforkCreated(opts *bind.FilterOpts, name [][32]byte) (*HardforkRegistryV1HardforkCreatedIterator, error) {

	var nameRule []interface{}
	for _, nameItem := range name {
		nameRule = append(nameRule, nameItem)
	}

	logs, sub, err := _HardforkRegistryV1.contract.FilterLogs(opts, "HardforkCreated", nameRule)
	if err != nil {
		return nil, err
	}
	return &HardforkRegistryV1HardforkCreatedIterator{contract: _HardforkRegistryV1.contract, event: "HardforkCreated", logs: logs, sub: sub}, nil
}

// WatchHardforkCreated is a free log subscription operation binding the contract event 0x33bbb09eb0e71b49dacc2c0e0f73dd640a1314f0d08d5f8efa5c12eac770c4c3.
//
// Solidity: event HardforkCreated(bytes32 indexed name, uint256 block_number, uint256 sw_features)
func (_HardforkRegistryV1 *HardforkRegistryV1Filterer) WatchHardforkCreated(opts *bind.WatchOpts, sink chan<- *HardforkRegistryV1HardforkCreated, name [][32]byte) (event.Subscription, error) {

	var nameRule []interface{}
	for _, nameItem := range name {
		nameRule = append(nameRule, nameItem)
	}

	logs, sub, err := _HardforkRegistryV1.contract.WatchLogs(opts, "HardforkCreated", nameRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(HardforkRegistryV1HardforkCreated)
				if err := _HardforkRegistryV1.contract.UnpackLog(event, "HardforkCreated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// HardforkRegistryV1HardforkFinalizedIterator is returned from FilterHardforkFinalized and is used to iterate over the raw logs and unpacked data for HardforkFinalized events raised by the HardforkRegistryV1 contract.
type HardforkRegistryV1HardforkFinalizedIterator struct {
	Event *HardforkRegistryV1HardforkFinalized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *HardforkRegistryV1HardforkFinalizedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(HardforkRegistryV1HardforkFinalized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(HardforkRegistryV1HardforkFinalized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *HardforkRegistryV1HardforkFinalizedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *HardforkRegistryV1HardforkFinalizedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// HardforkRegistryV1HardforkFinalized represents a HardforkFinalized event raised by the HardforkRegistryV1 contract.
type HardforkRegistryV1HardforkFinalized struct {
	Name        [32]byte
	BlockNumber *big.Int
	BlockHash   [32]byte
	SwFeatures  *big.Int
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterHardforkFinalized is a free log retrieval operation binding the contract event 0x6dc459fd769bc8043e2a9bf76cf8ca708f41158bb7d40566a9f488a8fc6c87da.
//
// Solidity: event HardforkFinalized(bytes32 indexed name, uint256 block_number, bytes32 block_hash, uint256 sw_features)
func (_HardforkRegistryV1 *HardforkRegistryV1Filterer) FilterHardforkFinalized(opts *bind.FilterOpts, name [][32]byte) (*HardforkRegistryV1HardforkFinalizedIterator, error) {

	var nameRule []interface{}
	for _, nameItem := range name {
		nameRule = append(nameRule, nameItem)
	}

	logs, sub, err := _HardforkRegistryV1.contract.FilterLogs(opts, "HardforkFinalized", nameRule)
	if err != nil {
		return nil, err
	}
	return &HardforkRegistryV1HardforkFinalizedIterator{contract: _HardforkRegistryV1.contract, event: "HardforkFinalized", logs: logs, sub: sub}, nil
}

// WatchHardforkFinalized is a free log subscription operation binding the contract event 0x6dc459fd769bc8043e2a9bf76cf8ca708f41158bb7d40566a9f488a8fc6c87da.
//
// Solidity: event HardforkFinalized(bytes32 indexed name, uint256 block_number, bytes32 block_hash, uint256 sw_features)
func (_HardforkRegistryV1 *HardforkRegistryV1Filterer) WatchHardforkFinalized(opts *bind.WatchOpts, sink chan<- *HardforkRegistryV1HardforkFinalized, name [][32]byte) (event.Subscription, error) {

	var nameRule []interface{}
	for _, nameItem := range name {
		nameRule = append(nameRule, nameItem)
	}

	logs, sub, err := _HardforkRegistryV1.contract.WatchLogs(opts, "HardforkFinalized", nameRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(HardforkRegistryV1HardforkFinalized)
				if err := _HardforkRegistryV1.contract.UnpackLog(event, "HardforkFinalized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// HardforkRegistryV1HardforkRemovedIterator is returned from FilterHardforkRemoved and is used to iterate over the raw logs and unpacked data for HardforkRemoved events raised by the HardforkRegistryV1 contract.
type HardforkRegistryV1HardforkRemovedIterator struct {
	Event *HardforkRegistryV1HardforkRemoved // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *HardforkRegistryV1HardforkRemovedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(HardforkRegistryV1HardforkRemoved)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(HardforkRegistryV1HardforkRemoved)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *HardforkRegistryV1HardforkRemovedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *HardforkRegistryV1HardforkRemovedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// HardforkRegistryV1HardforkRemoved represents a HardforkRemoved event raised by the HardforkRegistryV1 contract.
type HardforkRegistryV1HardforkRemoved struct {
	Name [32]byte
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterHardforkRemoved is a free log retrieval operation binding the contract event 0x7633164a5aa7e8b452d1c35fadd7abd1d59eb45b5fd97f68087b4a3ee2b280ed.
//
// Solidity: event HardforkRemoved(bytes32 indexed name)
func (_HardforkRegistryV1 *HardforkRegistryV1Filterer) FilterHardforkRemoved(opts *bind.FilterOpts, name [][32]byte) (*HardforkRegistryV1HardforkRemovedIterator, error) {

	var nameRule []interface{}
	for _, nameItem := range name {
		nameRule = append(nameRule, nameItem)
	}

	logs, sub, err := _HardforkRegistryV1.contract.FilterLogs(opts, "HardforkRemoved", nameRule)
	if err != nil {
		return nil, err
	}
	return &HardforkRegistryV1HardforkRemovedIterator{contract: _HardforkRegistryV1.contract, event: "HardforkRemoved", logs: logs, sub: sub}, nil
}

// WatchHardforkRemoved is a free log subscription operation binding the contract event 0x7633164a5aa7e8b452d1c35fadd7abd1d59eb45b5fd97f68087b4a3ee2b280ed.
//
// Solidity: event HardforkRemoved(bytes32 indexed name)
func (_HardforkRegistryV1 *HardforkRegistryV1Filterer) WatchHardforkRemoved(opts *bind.WatchOpts, sink chan<- *HardforkRegistryV1HardforkRemoved, name [][32]byte) (event.Subscription, error) {

	var nameRule []interface{}
	for _, nameItem := range name {
		nameRule = append(nameRule, nameItem)
	}

	logs, sub, err := _HardforkRegistryV1.contract.WatchLogs(opts, "HardforkRemoved", nameRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(HardforkRegistryV1HardforkRemoved)
				if err := _HardforkRegistryV1.contract.UnpackLog(event, "HardforkRemoved", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}
